# ========== 合并后的完整工作流（通过 needs 传递版本号） ==========
# 文件路径: .github/workflows/full-release.yml
name: Full Release - Version Bump → PR → Auto-merge → Delete Branch

on:
  push:
    branches:
      - main

jobs:
  # ========== Job A: 创建版本 PR ==========
  create-pr:
    runs-on: ubuntu-latest
    if: |
    startsWith(github.event.head_commit.message, 'Merge pull request') &&
    contains(github.event.head_commit.message, 'from dev')
    outputs:
      version: ${{ steps.version.outputs.clean }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract and clean version
        id: version
        run: |
          VERSION=$(jq -r '.version' package.json)
          CLEAN_VERSION=$(echo "$VERSION" | sed 's/-.*//')
          echo "original=$VERSION" >> $GITHUB_OUTPUT
          echo "clean=$CLEAN_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in package.json
        run: |
          jq --arg version "${{ steps.version.outputs.clean }}" '.version = $version' package.json > tmp.json && mv tmp.json package.json

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version to ${{ steps.version.outputs.clean }}"
          branch: "release/auto-bump-${{ steps.version.outputs.clean }}"
          title: "Release: ${{ steps.version.outputs.clean }}"
          body: "This PR updates the version from `${{ steps.version.outputs.original }}` to `${{ steps.version.outputs.clean }}`"
          base: main

  # ========== Job B: 审批 + Auto-merge ==========
  approve-and-merge:
    needs: create-pr
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Auto approve PR
        run: |
          VERSION=${{ needs.create-pr.outputs.version }}
          PR_NUMBER=$(gh pr list --state open --head release/auto-bump-$VERSION --json number --jq '.[0].number')
          echo "PR number: $PR_NUMBER"
          gh pr review "$PR_NUMBER" --approve

      - name: Enable Auto-merge
        run: |
          VERSION=${{ needs.create-pr.outputs.version }}
          PR_NUMBER=$(gh pr list --state open --head release/auto-bump-$VERSION --json number --jq '.[0].number')
          gh pr merge "$PR_NUMBER" --auto --squash


  # ========== Job C: 删除已合并分支 ==========
  delete-branch:
    needs: [create-pr, approve-and-merge]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Fetch PR and check merge status
        id: pr
        run: |
          VERSION=${{ needs.create-pr.outputs.version }}
          BRANCH="release/auto-bump-$VERSION"
          echo "Deleting merged branch: $BRANCH"

          # 检查是否已经 merged
          PR_NUMBER=$(gh pr list --state merged --head "$BRANCH" --json number --jq '.[0].number')

          if [ "$PR_NUMBER" != "" ]; then
            git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
            git push origin --delete "$BRANCH"
          else
            echo "PR not merged yet, skipping delete."
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
